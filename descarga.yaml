- hosts: win
  collections:
    - community.windows

  tasks:

# Check the system
    - name: Comprobando que el sistema es Server 2019
      ansible.windows.win_powershell:
        script: |
          (Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion").ProductName
      register: version
      failed_when: "'Windows Server 2019 Standard' not in version.output"
      changed_when: False

# Check the storage    
    - name : Get Bluence home drive size
      ansible.windows.win_powershell:
        script: | 
          ((get-volume -DriveLetter $env:BLUENCE_HOME.substring(0,1)).SizeRemaining)
      register: BLUENCE_HOME_SIZE
      failed_when: BLUENCE_HOME_SIZE.output[0] < 268435456
      changed_when: False

# Check Powershell Modules
    - name: Host check PS Module PSCX
      ansible.windows.win_powershell:
        script: |
          if (Get-Module -ListAvailable -Name PSCX) { Write-Host "Module PSCX exists, continue.." } else { Install-Module -Name Pscx -RequiredVersion 3.3.2 }

    - name: Host check PS Module PSCX
      ansible.windows.win_powershell:
        script: |
          if (Get-Module -ListAvailable -Name 7Zip4PowerShell) { Write-Host "Module 7Zip4PowerShell exists, continue.." } else { Install-Module -Name 7Zip4PowerShell -Force }

# Check temporal folder in localhost container
    - name: Ansible check project tmp directory
      delegate_to: localhost
      stat:
        path: /tmp/bluence_server_latest
      register: my_folder

    - name: "echo if project's last build directory already existed"
      delegate_to: localhost
      file:
        path: /tmp/bluence_server_latest
        state: absent
      when: my_folder.stat.exists

    - name: "Ansible Create Integration directory if not exists"
      delegate_to: localhost
      file:
        path: /tmp/bluence_server_latest/LastPinned
        state: directory
        mode: 0755
        recurse: true

    - name: "Ansible Create tmp MDT directory if not exists"
      delegate_to: localhost
      file:
        path: /tmp/bluence_server_latest/MDT
        state: directory
        mode: 0755
        recurse: true

# Download artifact from sources
    - name: Download last Full package from MDT IIS (Factory)
      delegate_to: localhost
      get_url:
        url: "http://{{ MDT_SERVER }}/MDT_SHARED/ISOTROL%20Bluence%20Full%20Package%20Latest/bluence_server_{{ BLUENCE_TARGET }}.7z"
        dest: "/tmp/bluence_server_latest/MDT/bluence_server_FACTORY_{{ TC_PROJECT_NAME }}.7z"
      register: download1
# Check the Download last Full package from GDrive (Factory) 
    - name: Check the discharge of artifact
      delegate_to: localhost
      stat:
        path: "/tmp/bluence_server_latest/MDT/bluence_server_FACTORY_{{ TC_PROJECT_NAME }}.7z"
      register: artifact1
      failed_when: download1.checksum_src != artifact1.stat.checksum
      changed_when: False

# Download artifact from sources
    - name: Download last pinned build from TeamCity (INTEGRATION)
      delegate_to: localhost
      get_url:
        url: "http://teamcity.isotrol.net:8111/repository/download/{{ TC_DEPLOY_ID }}/.{{ TC_ARTIFACT }}/bluence_server_{{ TC_PROJECT_NAME }}.7z?guest=1"
        dest: "/tmp/bluence_server_latest/LastPinned/bluence_server_INTEGRATION_{{ TC_PROJECT_NAME }}.7z"
      register: download2
# Check the Download last pinned build from TeamCity (INTEGRATION)
    - name: Check the discharge of artifact
      delegate_to: localhost
      stat:
        path: "/tmp/bluence_server_latest/LastPinned/bluence_server_INTEGRATION_{{ TC_PROJECT_NAME }}.7z"
      register: artifact2
      failed_when: download2.checksum_src != artifact2.stat.checksum
      changed_when: False

# Download artifact from sources
    - name: Download last pinned build from TeamCity (AM_COLLECTOR)
      delegate_to: localhost
      get_url:
        url: "http://teamcity.isotrol.net:8111/repository/download/{{ TC_COLLECTORS_DEPLOY_ID }}/.{{ TC_ARTIFACT }}/bluence_server_AM_COLLECTOR_{{ TC_PROJECT_NAME }}.7z?guest=1"
        dest: "/tmp/bluence_server_latest/LastPinned/bluence_server_AM_COLLECTOR_{{ TC_PROJECT_NAME }}.7z"
      register: download3
# Check the Download last pinned build from TeamCity (AM_COLLECTOR)
    - name: Check the discharge of artifact
      delegate_to: localhost
      stat:
        path: "/tmp/bluence_server_latest/LastPinned/bluence_server_AM_COLLECTOR_{{ TC_PROJECT_NAME }}.7z"
      register: artifact3
      failed_when: download3.checksum_src != artifact3.stat.checksum
      changed_when: False

# Copy artifact and from tmp to host (and check)
    - name: Copy File (Factory)
      ansible.windows.win_copy:
        backup: yes
        src: "/tmp/bluence_server_latest/MDT/bluence_server_FACTORY_{{ TC_PROJECT_NAME }}.7z"
        dest: "{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_FACTORY_{{ TC_PROJECT_NAME }}_{{ BLUENCE_TARGET }}.7z"
      register: checksum1
      failed_when: artifact1.stat.checksum != checksum1.checksum
      
# Copy artifact from tmp to host (and check)
    - name: Copy File (Integration)
      ansible.windows.win_copy:
        backup: yes
        src: "/tmp/bluence_server_latest/LastPinned/bluence_server_INTEGRATION_{{ TC_PROJECT_NAME }}.7z"
        dest: "{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_INTEGRATION_{{ TC_PROJECT_NAME }}_{{ BLUENCE_TARGET }}.7z"
      register: checksum2
      failed_when: artifact2.stat.checksum != checksum2.checksum

# Copy artifact from tmp to host (and check)
    - name: Copy File (Collectors)
      ansible.windows.win_copy:
        backup: yes
        src: "/tmp/bluence_server_latest/LastPinned/bluence_server_AM_COLLECTOR_{{ TC_PROJECT_NAME }}.7z"
        dest: "{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_AM_COLLECTOR_{{ TC_PROJECT_NAME }}_{{ BLUENCE_TARGET }}.7z"
      register: checksum3
      failed_when: artifact3.stat.checksum != checksum3.checksum

# Extract packages on host
    - name: Extract packages (Factory) with powershell module
      ansible.windows.win_powershell:
        script: |
          Expand-7Zip -ArchiveFileName '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_FACTORY_{{ TC_PROJECT_NAME }}_{{ BLUENCE_TARGET }}.7z' -TargetPath '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_{{ BLUENCE_TARGET }}_tmp'
# Check that it has been decompressed
    - name: Ansible check
      ansible.windows.win_file:
        path: '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_{{ BLUENCE_TARGET }}_tmp'
      register: decompr1
      changed_when: False

# Extract packages on host
    - name: Extract packages (Integration) with powershell module
      ansible.windows.win_powershell:
        script: |
          Expand-7Zip -ArchiveFileName '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_INTEGRATION_{{ TC_PROJECT_NAME }}_{{ BLUENCE_TARGET }}.7z' -TargetPath '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_{{ BLUENCE_TARGET }}_tmp'
# Check that it has been decompressed
    - name: Ansible check
      ansible.windows.win_file:
        path: '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_{{ BLUENCE_TARGET }}_tmp'
      register: decompr2
      changed_when: False

# Extract packages on host
    - name: Extract packages (Collectors) with powershell module
      ansible.windows.win_powershell:
        script: |
          Expand-7Zip -ArchiveFileName '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_AM_COLLECTOR_{{ TC_PROJECT_NAME }}_{{ BLUENCE_TARGET }}.7z' -TargetPath '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_{{ BLUENCE_TARGET }}_tmp'
# Check that it has been decompressed
    - name: Ansible check
      ansible.windows.win_file:
        path: '{{ ansible_env.BLUENCE_HOME }}\\..\\bluence_server_{{ BLUENCE_TARGET }}_tmp'
      register: decompr3
      changed_when: False
